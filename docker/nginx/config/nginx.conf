
events {
  worker_connections 1024;
}

http {
  # Use Dockers builtin resolver to find the other Docker based services
  resolver 127.0.0.11 ipv6=off;

  include /etc/nginx/mime.types;

  # Custom log format that also includes the host that processed the request
  log_format logstash '$remote_addr - $remote_user [$time_local] "$host" '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent"';

  # Send logs to Logstash
  access_log /var/log/nginx/access.log logstash;
  error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##
    gzip on;
    gzip_vary on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/x-icon image/svg+xml application/json;
    gzip_proxied any;


upstream web {
  server frontend:3000;
}

  # Serve all static content inside the /nginx/data directory
  server {
    listen 80;
    server_name default_server;
    root var/www/frontend;
      location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_max_temp_file_size 0;
            proxy_pass http://web;
            proxy_redirect off;
            proxy_read_timeout 240s;
      }
  }
}